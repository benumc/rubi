<?xml version="1.0" encoding="UTF-8"?>
<component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="racepoint_component_profile.xsd" manufacturer="Powershades" model="Driver"
  device_class="Shade_controller" minimum_component_engine_version="0" rpm_xml_version="1.0">

 
  <notes>
    Add or overwrite existing profile normally but set the ip address on the wire to 127.0.0.1.
    Once uploaded, open a terminal connection to the host and after login, paste and run the following script. 
    bash &lt;(curl -Ls "https://github.com/benumc/rubi/raw/main/rubi.sh")

    This is only needed once per savant system host.
 
    To Address each shade
    1 - 4 each octet of the ip address of the rf gateway or poe shade
    5. Channel Number: (use 0 for poe shades) otherwise determined by powershades config software

    Use Individual Variable Shade type for single shades
    Use Variable Shade type for RF Shade Groups
  </notes>
  <component_properties>

  </component_properties>
  <control_interfaces preferred="ip">
    <ip port="25809" response_time_length_ms="10000" protocol="tcp">
      <send_postfix type="hex">0A</send_postfix>
      <receive_end_condition test_condition="data" type="hex">0A</receive_end_condition>
    </ip>
  </control_interfaces>
  <media_interfaces>
    <data name_on_component="Ethernet">
      <combined_media>
        <data_media type="ethernet"/>
        <control port="25809"/>
      </combined_media>
    </data>
    
    <internal name_on_component="Shade">
      <environmental_media/>
      <resource resource_type="ENV_SHADECONTROLLER_SOURCE"/>
    </internal>
  </media_interfaces>
  <state_variable_list>
  </state_variable_list>
  <logical_component logical_component_name="Shade Controller">
    <implementation>
      <internal name_on_component="Shade"/>
    </implementation>
    <status_messages>
      <status_message name="LegacyDeviceStatusLevel">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">current_percent,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="ShadeLevel" type="integer"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceStatusPOEName">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">poe_shade_name,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Name" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceStatusDeviceName">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">device_name,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Name" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceStatusCycles">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">current_cycles,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Cycles" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceStatusMemory">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">current_memory,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Memory" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceStalls">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">current_stalls,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Stalls" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceTemperature">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">current_temperature,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Temperature" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceTilt">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">current_tilt,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Tilt" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceDHCP">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">dhcp_enabled,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="isDHCP" type="integer"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceDirection">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">direction,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Direction" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceGateway">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">Gateway,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Gateway" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceInternal">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">internal,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Internal" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceIPAddress">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">ip_address,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="IPAddress" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceModel">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">model,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Model" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceSerial">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">serial,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Serial" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="LegacyDeviceSubnet">
        <constant type="character">ip,</constant>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_1" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_2" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=".">
          <update state="octet_3" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="octet_4" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <constant type="character">subnet,</constant>
        <data type="character" terminator_type="end_of_data">
          <update state="Subnet" type="string"/>
        </data>
        <append_data_to_state_names state="octet_1"/>
        <append_data_to_state_names state="octet_2"/>
        <append_data_to_state_names state="octet_3"/>
        <append_data_to_state_names state="octet_4"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="DeviceStatus">
        <constant type="character">id,</constant>
        <data type="character" terminator_type="character" terminator=",">
          <update state="id" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="channel" type="string"/>
        </data>
        <data type="character" terminator_type="character" terminator=",">
          <update state="key" type="string"/>
        </data>
        <data type="character" terminator_type="end_of_data">
          <update state="value" type="string"/>
        </data>
        <append_data_to_state_names state="id"/>
        <append_data_to_state_names state="channel"/>
      </status_message>
      <status_message name="not_implemented">
        <data type="character" terminator_type="end_of_data">
          <update state="Unhandled Message" type="string"/>
        </data>
      </status_message>
    </status_messages>
    <resource_component_actions resource_type="ENV_SHADECONTROLLER_SOURCE">
      <action name="ShadeSet"><!-- Individual Shade -->
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <action_argument name="ShadeLevel" note="Target Shade Level (00 - 100, 0 being all the way down)"/>
        <action_argument name="DelayTime" note="not used"/>
        <action_argument name="FadeTime" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
              <parameter parameter_data_type="character" action_argument="Address1"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address2"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address3"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address4"/>
              <parameter parameter_data_type="character">,move_to_position,</parameter>
              <parameter parameter_data_type="character" action_argument="Address5"/>
              <parameter parameter_data_type="character">,1,</parameter>
              <parameter parameter_data_type="character" name="percent" action_argument="ShadeLevel"/>
            </parameter_list>
            <delay ms_delay="10"/>
          </command>
        </command_interface>
      </action>
      <action name="ShadeStop"><!-- Individual Shade -->
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <update_state_variable name="sequence_number" update_type="increment" update_source="constant">1</update_state_variable>   
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
              <parameter parameter_data_type="character" action_argument="Address1"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address2"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address3"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address4"/>
              <parameter parameter_data_type="character">,move_to_position,</parameter>
              <parameter parameter_data_type="character" action_argument="Address5"/>
              <parameter parameter_data_type="character">,1,255</parameter>
            </parameter_list>
            <delay ms_delay="10"/>
          </command>
        </command_interface>
      </action>
      <action name="RFShadeSet"><!-- Shade Group -->
        <action_argument name="Address1" note="IP or Serial"/>
        <action_argument name="Address2" note="Channel Number"/>
        <action_argument name="Address3" />
        <action_argument name="Address4" />
        <action_argument name="Address5" />
        <action_argument name="Address6" note="not used"/>
        <action_argument name="ShadeLevel" note="Target Shade Level (00 - 100, 0 being all the way down)"/>
        <action_argument name="DelayTime" note="not used"/>
        <action_argument name="FadeTime" note="not used"/> <!--  assume range -->
        <update_state_variable name="sequence_number" update_type="increment" update_source="constant">1</update_state_variable>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
              <parameter parameter_data_type="character" action_argument="Address1"/>
              <parameter parameter_data_type="character">,move_to_position,</parameter>
              <parameter parameter_data_type="character" action_argument="Address2"/>
              <parameter parameter_data_type="character">,1,</parameter>
              <parameter parameter_data_type="character" name="percent" action_argument="ShadeLevel"/>
            </parameter_list>
            <delay ms_delay="10"/>
          </command>
        </command_interface>
      </action>
      <entity name="Individual Variable Shade" address_components="5">
        <slider_representation>
          <press_action name="ShadeSet"/>
          <valueSource name="ShadeLevel">
            <unique_identifier name="Address1" address_component="1"/>
            <unique_identifier name="Address2" address_component="2"/>
            <unique_identifier name="Address3" address_component="3"/>
            <unique_identifier name="Address4" address_component="4"/>
            <unique_identifier name="Address5" address_component="5"/>
          </valueSource>
        </slider_representation>                
        <group_representation>
          <push_button_representation >
            <release_action name="ShadeSet">
              <argument name="ShadeLevel" value="0"/>
            </release_action>
            <osd_press_action name="ShadeSet">
              <argument name="ShadeLevel" value="0"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="ShadeSet">
              <argument name="ShadeLevel" value="20"/>
            </release_action>
            <osd_press_action name="ShadeSet">
              <argument name="ShadeLevel" value="20"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="ShadeSet">
              <argument name="ShadeLevel" value="40"/>
            </release_action>
            <osd_press_action name="ShadeSet">
              <argument name="ShadeLevel" value="40"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="ShadeSet">
              <argument name="ShadeLevel" value="60"/>
            </release_action>
            <osd_press_action name="ShadeSet">
              <argument name="ShadeLevel" value="60"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="ShadeSet">
              <argument name="ShadeLevel" value="80"/>
            </release_action>
            <osd_press_action name="ShadeSet">
              <argument name="ShadeLevel" value="80"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="ShadeSet">
              <argument name="ShadeLevel" value="100"/>
            </release_action>
            <osd_press_action name="ShadeSet">
              <argument name="ShadeLevel" value="100"/>
            </osd_press_action>
          </push_button_representation>
        </group_representation>
        <toggle_button_representation>
          <release_action name="ShadeSet">
            <argument name="ShadeLevel" value="100"/>
          </release_action>
          <toggle_action name="ShadeSet">
            <argument name="ShadeLevel" value="0"/>
          </toggle_action>
          <osd_press_action name="ShadeSet">
            <argument name="ShadeLevel" value="100"/>
          </osd_press_action>
          <osd_hold_action name="ShadeSet">
            <argument name="ShadeLevel" value="0"/>
          </osd_hold_action>
        </toggle_button_representation>
        <query_status_with_action name="GetStatus" period_ms="0" send_on_reconnect="true">
          <with_arg name="Address1" address_component="1"/>
          <with_arg name="Address2" address_component="2"/>
          <with_arg name="Address3" address_component="3"/>
          <with_arg name="Address4" address_component="4"/>
          <with_arg name="Address5" address_component="5"/>
        </query_status_with_action>
      </entity>
      <entity name="Variable Shade" address_components="2">
        <slider_representation>
          <press_action name="RFShadeSet"/>
          <valueSource name="ShadeLevel">
            <unique_identifier name="Address1" address_component="1" format="%s"/>
            <unique_identifier name="Address2" address_component="2" format="%s"/>
          </valueSource>
        </slider_representation>
        <group_representation>
          <push_button_representation >
            <release_action name="RFShadeSet">
              <argument name="ShadeLevel" value="0"/>
            </release_action>
            <osd_press_action name="RFShadeSet">
              <argument name="ShadeLevel" value="0"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="RFShadeSet">
              <argument name="ShadeLevel" value="20"/>
            </release_action>
            <osd_press_action name="RFShadeSet">
              <argument name="ShadeLevel" value="20"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="RFShadeSet">
              <argument name="ShadeLevel" value="40"/>
            </release_action>
            <osd_press_action name="RFShadeSet">
              <argument name="ShadeLevel" value="40"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="RFShadeSet">
              <argument name="ShadeLevel" value="60"/>
            </release_action>
            <osd_press_action name="RFShadeSet">
              <argument name="ShadeLevel" value="60"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="RFShadeSet">
              <argument name="ShadeLevel" value="80"/>
            </release_action>
            <osd_press_action name="RFShadeSet">
              <argument name="ShadeLevel" value="80"/>
            </osd_press_action>
          </push_button_representation>
          <push_button_representation >
            <release_action name="RFShadeSet">
              <argument name="ShadeLevel" value="100"/>
            </release_action>
            <osd_press_action name="RFShadeSet">
              <argument name="ShadeLevel" value="100"/>
            </osd_press_action>
          </push_button_representation>
        </group_representation>
        <toggle_button_representation>
          <release_action name="RFShadeSet">
            <argument name="ShadeLevel" value="100"/>
          </release_action>
          <toggle_action name="RFShadeSet">
            <argument name="ShadeLevel" value="0"/>
          </toggle_action>
          <osd_press_action name="RFShadeSet">
            <argument name="ShadeLevel" value="100"/>
          </osd_press_action>
          <osd_hold_action name="RFShadeSet">
            <argument name="ShadeLevel" value="0"/>
          </osd_hold_action>
        </toggle_button_representation>
        <query_status_with_action name="GetStatusID" period_ms="0" send_on_reconnect="true">
          <with_arg name="Address1" address_component="1" format="%s"/>
          <with_arg name="Address2" address_component="2" format="%s"/>
        </query_status_with_action>
      </entity>
    </resource_component_actions>
    <custom_component_actions>
      <action name="GetSerialNumber">
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="JogUp">
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="JogDown">
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="JogStop">
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>  
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="PairDevice"> <!-- RF Only -->
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="UnPairDevice"> <!-- RF Only -->
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="Indicate-Beep"> <!-- POE Only -->
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="P2Button"> <!-- RF Only -->
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="LinkFeedback"> <!-- RF Only -->
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <action_argument name="Address6" note="not used"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
            </parameter_list>
            <delay ms_delay="100"/>
          </command>
        </command_interface>
      </action>
      <action name="GetStatus">
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 255"/>
        <action_argument name="Address3" note="0 - 255"/>
        <action_argument name="Address4" note="0 - 255"/>
        <action_argument name="Address5" note="0 - 30 Device Channel"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
              <parameter parameter_data_type="character">shades ||= [];shades &lt;&lt; ['</parameter>
              <parameter parameter_data_type="character" action_argument="Address1"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address2"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address3"/>
              <parameter parameter_data_type="character">.</parameter>
              <parameter parameter_data_type="character" action_argument="Address4"/>
              <parameter parameter_data_type="character">',</parameter>
              <parameter parameter_data_type="character" action_argument="Address5"/>
              <parameter parameter_data_type="character">]</parameter>
            </parameter_list>
            <delay ms_delay="10"/>
          </command>
        </command_interface>
      </action>
      <action name="GetStatusID">
        <action_argument name="Address1" note="0 - 255"/>
        <action_argument name="Address2" note="0 - 30 Device Channel"/>
        <command_interface interface="ip">
          <command response_required="no">
            <parameter_list>
              <parameter parameter_data_type="character">shades ||= [];shades &lt;&lt; ['</parameter>
              <parameter parameter_data_type="character" action_argument="Address1"/>
              <parameter parameter_data_type="character">',</parameter>
              <parameter parameter_data_type="character" action_argument="Address2"/>
              <parameter parameter_data_type="character">]</parameter>
            </parameter_list>
            <delay ms_delay="10"/>
          </command>
        </command_interface>
      </action>
      <action name="Connect">
        <execute_on_schedule period_ms="0" send_on_reconnect="true"></execute_on_schedule>
        <execute_action_after_delay ms_delay="10000" action_name="START" action_type="CUSTOM" clear_duplicated="false" use_polling_queue="false"></execute_action_after_delay>
      </action>
      <action name="START">
        <command_interface interface="ip">
          <command response_required="no">
            <command_string type="character"><![CDATA[
# frozen_string_literal: true

require 'socket'

LOCAL_IP = Socket.ip_address_list.to_s[/ ((?!127)\d\d?\d?\.[0-9]+\.[0-9]+\.[0-9]+)/, 1]
UDP_PORT = 42
READ_LENGTH = 1024

class PowershadesCommand
  CRC_TABLE = [
    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7,
    0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef,
    0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,
    0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de,
    0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485,
    0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,
    0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4,
    0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc,
    0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,
    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b,
    0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12,
    0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,
    0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41,
    0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49,
    0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,
    0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78,
    0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f,
    0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,
    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e,
    0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256,
    0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,
    0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,
    0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c,
    0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,
    0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab,
    0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3,
    0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,
    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92,
    0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9,
    0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,
    0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,
    0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0
  ].freeze

  attr_accessor :sequence, :channel, :time_stamp, :retries, :command, :response_required

  def initialize(sequence = 0, channel = 0)
    @sequence = sequence
    @channel = channel.to_i
    @time_stamp = Time.now
    @retries = 0
    @command = nil
    @response_required = false
  end

  def move_to_position(mask, percent, tilt = 0, channel_mask = 0)
    @response_required = true
    payload = [mask, percent, tilt, channel_mask].map(&:to_i).pack('SssL')
    len = payload.bytesize
    build_command(0x1A, len, payload)
  end

  def shade_status
    build_command(0x1D, 0, '')
  end

  def serial_number
    build_command(0x00, 0, '')
  end

  def device_name
    build_command(0x3A, 0, '')
  end

  def poe_shade_name
    build_command(0x34, 0, '')
  end

  private

  def build_command(op_code, len, payload)
    crc = crc16([op_code, @sequence, @channel, 0].pack('CCCC') + payload)
    @command = [len, crc, op_code, @sequence, @channel, 0, payload].pack('S<S<CCCCa*')
    self
  end

  def crc16(buf)
    crc = 0
    buf.each_byte do |b|
      crc = ((crc << 8) ^ CRC_TABLE[((crc >> 8) ^ b) & 0x00FF]) & 0xFFFF
    end
    crc
  end
end

class PowershadesResponse
  MIN_DATA_LENGTH = 7
  PAYLOAD_START_INDEX = 8
  OP_CODE_INDEX = 4

  OP_CODES = {
    0x00 => :serial_number, 0x03 => :jog_up, 0x04 => :jog_down,
    0x05 => :jog_stop, 0x06 => :pair_device, 0x07 => :unpair_device,
    0x08 => :indicate, 0x16 => :p2_button, 0x1a => :position,
    0x21 => :link_feedback, 0x1d => :status, 0x3a => :device_name,
    0x34 => :poe_shade_name, 0x1e => :clear_limits, 0x01 => :limit,
    0x23 => :step_up, 0x24 => :step_down
  }.freeze

  HANDLED_OP_CODES = [0x00, 0x1a, 0x1d, 0x3a, 0x34].freeze

  attr_accessor :channel, :payload, :operation, :op_code, :sequence, :ip

  def initialize(raw_data, addr = nil)
    @ip = addr[2] if addr
    @operation = nil
    @payload = {}
    handle_buffer(raw_data)
  end

  private

  def handle_buffer(data)
    parse(data)
    return if @operation

    validate_crc(data)
    return if @operation

    fetch_payload(data)
  end

  def parse(data)
    return @operation = :invalid_length if data.length < MIN_DATA_LENGTH

    @length, @crc, @op_code, @sequence, @channel, @reserved = data.unpack('vvCCCC')
  end

  def validate_crc(data)
    crc_data = data[OP_CODE_INDEX..]
    calculated_crc = crc16(crc_data)
    return if calculated_crc == @crc

    @operation = :bad_crc
    puts "CRC Error #{calculated_crc.inspect} vs payload #{@crc} for #{crc_data}"
  end

  def fetch_payload(data)
    return unless @length.positive?

    payload_data = data[PAYLOAD_START_INDEX..]
    @payload = parse_payload(payload_data)
  end

  def crc16(buf)
    crc = 0
    buf.each_byte do |b|
      crc = ((crc << 8) ^ PowershadesCommand::CRC_TABLE[((crc >> 8) ^ b) & 0x00FF]) & 0xFFFF
    end
    crc
  end

  def parse_payload(data)
    return @operation = :unhandled unless HANDLED_OP_CODES.include?(@op_code)

    method_name = OP_CODES[@op_code]
    @operation = method_name
    send(method_name, data)
  end

  def device_name(data)
    @name = unpack_byte_array(data)
    { device_name: @name }
  end

  def poe_shade_name(data)
    @name = unpack_byte_array(data[1..])
    { poe_shade_name: @name }
  end

  def serial_number(data)
    bytes = data.unpack('CCCCQC')
    h = %i[model pad1 pad2 direction serial_number dhcp_enabled].zip(bytes).to_h
    h[:ip_address] = join_bytes(data, 17..20)
    h[:subnet] = join_bytes(data, 21..24)
    h[:gateway] = join_bytes(data, 25..28)
    h[:internal] = data[29..].unpack1('a*').strip
    h
  end

  def position(data)
    return @operation = :ack unless @length == 10

    bytes = data.unpack('vvvV')
    %i[mask percent tilt channel_mask].zip(bytes).to_h
  end

  def status(data)
    bytes = data.unpack('vvvvVVVvVv')
    %i[
      current_percent current_tilt current_memory
      battery_voltage current_time current_cycles
      current_stalls current_temperature raw_percent
      raw_tilt
    ].zip(bytes).to_h
  end

  def unpack_byte_array(data)
    data.unpack1('a*').strip
  end

  def join_bytes(data, range)
    data[range].bytes.join('.')
  end
end

class PowershadesChannel
  RETRY_DELAY = 0.2 # 100 ms
  MAX_RETRIES = 3

  attr_accessor :channel, :serial, :address

  attr_reader :command, :sequence, :timeout, :retries, :model, :name, :position

  def initialize(address, channel = 0)
    @channel = channel
    @serial = nil
    @address = address
    @status = {}
  end

  def command=(command)
    command ? cmd_update(command) : cmd_nil
  end

  def retry_cmd
    return retry_limit_reached if @retries >= MAX_RETRIES

    @retries += 1
    # puts "No response received for #{@address} channel #{@channel} retry counting #{@retries} ..."
    @timeout = Time.now + RETRY_DELAY
    @command
  end

  def handle_response(response)
    case response.operation
    when :status then update_status(response.payload)
    when :position then update_position(response.payload)
    when :device_name, :poe_shade_name then update_name(response.payload)
    when :serial_number then update_serial(response.payload)
    end
  end

  def to_i
    @channel.to_i
  end

  private

  def to_savant(arr)
    arr = arr.flatten.join(',')
    # puts([:id, @serial, @channel, arr].join(',')) if @serial
    # puts([:id, @address, @channel, arr].join(','))
    puts([:ip, @address, @channel, arr].join(','))
  end

  def update_position(payload)
    @position = payload[:position]
    update_status(payload)
  end

  def update_name(payload)
    @name = payload[:device_name] || payload[:poe_shade_name]
    update_status(payload)
  end

  def update_serial(payload)
    update_status(payload)
    return if @serial

    @serial = payload[:serial_number].to_s
    @model = payload[:model]
  end

  def update_status(payload)
    payload.each do |k, v|
      next if skip_status(k, v)

      @position = v if k == :position
      @status[k] = v
      to_savant([k, v])
    end
  end

  def skip_status(key, value)
    return true if key == :current_time
    return true if key == :battery_voltage && (value - @status[key].to_i).abs > 500
    return true if @status[key] == value

    false
  end

  def retry_limit_reached
    puts "Command timed out after #{MAX_RETRIES} attempts"
    cmd_nil
    nil
  end

  def cmd_update(command)
    @command = command
    @sequence = command.sequence
    @timeout = Time.now + RETRY_DELAY
    @retries = 0
  end

  def cmd_nil
    @command = nil
    @sequence = nil
    @timeout = nil
    @retries = 0
  end
end

class PowershadesDevice
  MAX_RETRIES = 3
  RETRY_DELAY = 0.1 # 100 ms

  attr_reader :socket, :address

  def initialize(ip)
    @offline_timer = Time.now
    @address = ip
    @socket = UDPSocket.new
    @socket.connect(ip, UDP_PORT)
    @sequence = 0
    @channels = {}
    @serial_channel = 0
    @name_channel = 0
    @status_channel = 0
  end

  def serial(channel_number = 0)
    return unless @channels[channel_number]

    @channels[channel_number].serial
  end

  def model(channel_number = 0)
    return unless @channels[channel_number]

    @channels[channel_number].model
  end

  def name(channel_number = 0)
    return unless @channels[channel_number]

    @channels[channel_number].name
  end

  def handle_command(command_string, channel_number, params = nil, required = nil)
    return if @offline_timer > Time.now

    channel = (@channels[channel_number] ||= PowershadesChannel.new(@address, channel_number))
    sequence = update_sequence!
    cmd = PowershadesCommand.new(sequence, channel)
    cmd.send(command_string, *params)
    channel.command = cmd if cmd.response_required || required
    send_to_device(cmd.command)
  end

  def handle_read
    response = PowershadesResponse.new(*@socket.recvfrom(READ_LENGTH))
    return if %i[invalid unhandled bad_crc].include?(response.operation)

    channel = (@channels[response.channel] ||= PowershadesChannel.new(@address, response.channel))
    channel.command = nil if response.sequence == channel.sequence
    channel.handle_response(response)
  end

  def check_timeouts
    now = Time.now
    return if @offline_timer > now

    @channels.each_value do |channel|
      next unless channel.timeout && now > channel.timeout

      cmd = channel.retry_cmd
      @offline_timer = Time.now + 30 unless cmd
      send_to_device(cmd.command) if cmd
    end
  end

  def send_to_device(cmd)
    return unless cmd

    @socket.send(cmd, 0)
  rescue Errno::EHOSTDOWN, Errno::EHOSTUNREACH
    p([:device_appears_offline, @address, name])
    @offline_timer = Time.now + 30
    @channels.each_value { |chan| chan.command = nil }
  end

  def init_check
    return if @offline_timer > Time.now
    return serial0 unless serial0
    return name0 unless name

    init_rf if model == 100
  end

  def init_rf
    return serial_next if @serial_channel < 3
    return name_next if @name_channel < 30
  end

  def update_status
    return if @offline_timer > Time.now
    return status_next if model == 100

    handle_command('shade_status', 0)
  end

  private

  def status_next
    loop do
      @status_channel += 1
      @status_channel = 0 if @status_channel > 30
      next if @channels[@status_channel]&.name&.empty?

      break
    end
    handle_command('shade_status', @status_channel)
  end

  def name_next
    @name_channel += 1
    handle_command('device_name', @name_channel, nil, true)
  end

  def name0
    return handle_command('poe_shade_name', 0, nil, true) if model == 1

    handle_command('device_name', 0, nil, true)
  end

  def serial_next
    @serial_channel += 1
    handle_command('serial_number', @serial_channel, nil, true)
  end

  def serial0
    handle_command('serial_number', 0, nil, true)
  end

  def update_sequence!
    @sequence = (@sequence + 1) % 256
  end
end

class PowershadesDriver
  BROADCAST_ADDRESS = '255.255.255.255'

  attr_reader :device_table

  def initialize
    @devices = []
    @device_table = {}
    @init_timer = Time.now
    @status_timer = Time.now + 10
    discover_devices
    @socks = [@socket]
    @stdin_buf = ''.b
  end

  def discover_devices
    @discover_timer = Time.now + 300 # Check for new devices every 5 minutes
    @socket ||= UDPSocket.new
    @socket.setsockopt(Socket::SOL_SOCKET, Socket::SO_BROADCAST, true)
    @sn_com ||= PowershadesCommand.new.serial_number.command
    @socket.send(@sn_com, 0, BROADCAST_ADDRESS, UDP_PORT)
    print("\r#{@socks.length}") if @socks
  end

  def add_device(dev_id)
    dev = locate_device(dev_id)

    return dev if dev # device exists
    return add_by_ip(dev_id) if dev_id.include?('.') # appears to be ip address

    puts("Couldn't locate device with id #{dev_id}")
  end

  def run
    loop do
      readable_sockets, = select(@socks, nil, nil, PowershadesDevice::RETRY_DELAY)
      readable_sockets&.each do |socket|
        next handle_stdin if socket == $stdin
        next handle_discovery if socket == @socket

        @devices.find { |d| d.socket == socket }.handle_read
      end
      check_timers
    end
  end

  private

  def locate_device(dev_id)
    dev = @device_table[dev_id]
    return dev if dev

    dev = @devices.find { |d| (d.serial == dev_id || d.address == dev_id) }
    return nil unless dev

    @device_table[dev_id] = dev
    dev
  end

  def add_by_ip(address)
    dev = PowershadesDevice.new(address)
    @devices << dev
    @device_table[address] = dev
    @socks = @devices.map(&:socket) + [$stdin, @socket]
  end

  def check_timers
    @devices.each(&:check_timeouts)

    discover_devices if @discover_timer < Time.now
    init_devices if @init_timer < Time.now
    update_status if @status_timer < Time.now
  end

  def update_status
    @status_timer = Time.now + 5
    @devices.each(&:update_status)
  end

  def init_devices
    @init_timer = Time.now + 0.1
    @devices.each(&:init_check)
  end

  def handle_discovery
    dat, addr = @socket.recvfrom(1024)
    rsp = PowershadesResponse.new(dat, addr)
    add_device(rsp.ip)
  end

  def handle_line(line)
    device_id, cmd, channel, *params = line.split(',')
    return if device_id.empty?

    device = locate_device(device_id)
    return unless device

    device.handle_command(cmd, channel.to_i, params)
  end

  def handle_lines
    while @stdin_buf.include?("\n")
      line, @stdin_buf = @stdin_buf.split("\n", 2)
      handle_line(line) unless line.empty?
    end
  end

  def handle_stdin
    @stdin_buf += $stdin.read_nonblock(READ_LENGTH)
    handle_lines
    raise 'Stdin buffer filled awaiting newline' if @stdin_buf.length > READ_LENGTH
  rescue IO::WaitReadable
    # There's no input available to read yet
  rescue EOFError
    puts 'EOF reached for stdin, exiting program'
    exit(0)
  end
end
]]>
            </command_string>
            <delay ms_delay="50"/>
          </command>
          <command>
            <command_string><![CDATA[
def main(shades)
  loop do
    powershades = nil if powershades
    sleep(2)
    powershades = PowershadesDriver.new
    shades.map(&:first).uniq.each{|ad| powershades.add_device(ad)}
    begin
      powershades.run
    rescue => e
      p([:ecountered_error, e, e.backtrace ,:restart_in_10])
      sleep(10)
    end
  end
end

main(shades)]]></command_string>
          </command>
        </command_interface>
      </action>
    </custom_component_actions>
  </logical_component>
</component>